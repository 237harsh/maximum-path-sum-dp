class Solution {
public:
    //tabulation 
    /*
    int sum(int i,int j,vector<vector<int>>& grid,vector<vector<int>>&dp)
    {
        if(i==0&&j==0)return grid[0][0];
        if(i<0||j<0)return INT_MAX-1000;
        if(dp[i][j]!=-1)return dp[i][j];
       
       int up=grid[i][j]+sum(i-1,j,grid,dp);
       int lt=grid[i][j]+sum(i,j-1,grid,dp);
        return dp[i][j]=min(up,lt);
        
    }*/
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        
        vector<vector<int>>dp(m,vector<int>(n,-1));
        //return sum(m-1,n-1,grid,dp);
        
        
        //tabulation
      for(int i=0;i<m;i++)
      {
          for(int j=0;j<n;j++)
          {
              if(i==0&&j==0)
              {
                  dp[i][j]=grid[i][j];
                  
              }
              else
              {
                  int rt=INT_MAX,dn=INT_MAX;
               if(j>0)rt=grid[i][j]+dp[i][j-1];
                if(i>0)  dn=grid[i][j]+dp[i-1][j];
                  dp[i][j]=min(rt,dn);
              }
          }
      }
        return dp[m-1][n-1];
        
    }
};
